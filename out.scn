#usda 1.0

def Xform "root"
{
    def Mesh "box"
    {
        float3[] extent = [(-50, -50, 0), (50, 50, 100)]
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
        int[] faceVertexIndices = [0, 10, 14, 3, 4, 15, 18, 7, 11, 22, 25, 16, 17, 26, 29, 19, 1, 32, 36, 12, 13, 37, 40, 23, 24, 41, 44, 27, 28, 45, 48, 30, 31, 49, 52, 20, 21, 53, 56, 8, 33, 60, 63, 38, 39, 64, 67, 42, 43, 68, 70, 46, 47, 71, 74, 50, 51, 75, 77, 54, 55, 78, 81, 57, 69, 65, 84, 72, 73, 85, 79, 76, 66, 61, 88, 86, 87, 89, 82, 80, 62, 34, 92, 90, 91, 93, 58, 83, 35, 2, 5, 94, 95, 6, 9, 59]
        rel material:binding = </materials/white>
        normal3f[] normals = [(0, 0, -1), (1, 0, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 0, -1), (-1, 0, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, -1, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (0, 0, 1), (0, 1, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (1, 0, 0), (0, -1, 0), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, 1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0)]
        point3f[] points = [(50, 50, 0), (50, 50, 0), (50, 50, 0), (0, 50, 0), (0, 50, 0), (0, 50, 0), (0, 50, 0), (-50, 50, 0), (-50, 50, 0), (-50, 50, 0), (50, 0, 0), (50, 0, 0), (50, 0, 0), (50, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (-50, 0, 0), (-50, 0, 0), (-50, 0, 0), (-50, 0, 0), (50, -50, 0), (50, -50, 0), (50, -50, 0), (0, -50, 0), (0, -50, 0), (0, -50, 0), (0, -50, 0), (-50, -50, 0), (-50, -50, 0), (-50, -50, 0), (50, 50, 50), (50, 50, 50), (50, 50, 50), (50, 50, 50), (50, 0, 50), (50, 0, 50), (50, 0, 50), (50, 0, 50), (50, -50, 50), (50, -50, 50), (50, -50, 50), (50, -50, 50), (0, -50, 50), (0, -50, 50), (0, -50, 50), (0, -50, 50), (-50, -50, 50), (-50, -50, 50), (-50, -50, 50), (-50, -50, 50), (-50, 0, 50), (-50, 0, 50), (-50, 0, 50), (-50, 0, 50), (-50, 50, 50), (-50, 50, 50), (-50, 50, 50), (-50, 50, 50), (50, 50, 100), (50, 50, 100), (50, 50, 100), (50, 0, 100), (50, 0, 100), (50, 0, 100), (50, 0, 100), (50, -50, 100), (50, -50, 100), (50, -50, 100), (0, -50, 100), (0, -50, 100), (0, -50, 100), (0, -50, 100), (-50, -50, 100), (-50, -50, 100), (-50, -50, 100), (-50, 0, 100), (-50, 0, 100), (-50, 0, 100), (-50, 0, 100), (-50, 50, 100), (-50, 50, 100), (-50, 50, 100), (0, 0, 100), (0, 0, 100), (0, 0, 100), (0, 0, 100), (0, 50, 100), (0, 50, 100), (0, 50, 100), (0, 50, 100), (0, 50, 50), (0, 50, 50), (0, 50, 50), (0, 50, 50)]
        texCoord2f[] primvars:Texture_uv = [(1, 0), (1, 0), (0, 0), (0.5, 0), (0.5, 0), (0.5, 0), (0.5, 0), (0, 0), (0, 0), (1, 0), (1, 0.5), (1, 0.5), (0.5, 0), (0.5, 0), (0.5, 0.5), (0.5, 0.5), (0.5, 0.5), (0.5, 0.5), (0, 0.5), (0, 0.5), (0.5, 0), (0.5, 0), (1, 1), (0, 0), (1, 0), (0.5, 1), (0.5, 1), (0.5, 0), (0.5, 0), (0, 1), (0, 0), (1, 0), (1, 0.5), (1, 0.5), (0, 0.5), (0, 0.5), (0.5, 0.5), (0.5, 0.5), (0.5, 0.5), (0.5, 0.5), (0, 0.5), (1, 0.5), (0, 0.5), (1, 0.5), (0.5, 0.5), (0.5, 0.5), (0.5, 0.5), (0.5, 0.5), (0, 0.5), (1, 0.5), (0, 0.5), (1, 0.5), (0.5, 0.5), (0.5, 0.5), (0.5, 0.5), (0.5, 0.5), (0, 0.5), (0, 0.5), (1, 0.5), (1, 0.5), (1, 1), (1, 1), (0, 1), (0.5, 1), (0.5, 1), (1, 0.5), (1, 0.5), (0, 1), (1, 1), (1, 0), (0.5, 1), (0.5, 1), (0.5, 0), (0.5, 0), (0, 1), (1, 1), (0, 0), (0.5, 1), (0.5, 1), (0, 0.5), (0, 0.5), (0, 1), (0, 1), (1, 1), (0.5, 0.5), (0.5, 0.5), (0.5, 0.5), (0.5, 0.5), (0.5, 1), (0.5, 1), (0.5, 1), (0.5, 1), (0.5, 0.5), (0.5, 0.5), (0.5, 0.5), (0.5, 0.5)]
        uniform token subdivisionScheme = "none"
    }
}

def Scope "materials"
{
    def Material "white"
    {
        token inputs:frame:stPrimvarName = "Texture_uv"
        token outputs:surface.connect = </materials/white/pbr.outputs:surface>

        def Shader "pbr"
        {
            uniform token info:id = "UsdPreviewSurface"
            float3 inputs:diffuseColor.connect = </materials/white/color_map.outputs:rbg>
            float inputs:metallic = 0
            float inputs:roughness = 0.5245716
            token outputs:surface
        }

        def Shader "Primvar"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            token inputs:varname.connect = </materials/white.inputs:frame:stPrimvarName>
            float2 outputs:result
        }

        def Shader "color_map"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @0/diffuse.png@
            float2 inputs:st.connect = </materials/white/Primvar.outputs:result>
            float3 outputs:rbg
        }
    }
}

